{"version":3,"sources":["themes/openrpcTheme.ts","helpers/openrpcDocumentToJSONRPCSchema.ts","hooks/useMonacoVimMode.ts","containers/JSONRPCRequestEditor.tsx","hooks/useTabs.ts","helpers/openrpcDocumentToJSONRPCSchemaResult.ts","components/TransportDropdown.tsx","transports/PostMessageTransport.ts","hooks/useTransport.ts","containers/Inspector.tsx","hooks/useQueryParams.ts","containers/App.tsx","index.tsx"],"names":["lightTheme","createMuiTheme","props","MuiAppBar","position","MuiCard","elevation","overrides","root","background","palette","default","darkTheme","type","grey","paper","MuiTable","MuiTypography","color","schema","jsonrpc","enum","description","id","oneOf","method","openrpcDocumentToJSONRPCSchema","openrpcDocument","properties","methods","map","const","name","summary","markdownDescription","allOf","if","then","params","minItems","filter","param","required","length","maxItems","defaultSnippets","examples","example","label","body","ex","value","items","additionalProperties","reduce","memo","initVimMode","require","useMonacoVimMode","editor","useState","vimMode","setVimMode","useEffect","addAction","keybindings","monaco","chord","CtrlCmd","KEY_K","KEY_V","contextMenuGroupId","contextMenuOrder","run","dispose","JSONRPCRequestEditor","setEditor","windowSize","useWindowSize","layout","modelName","info","title","modelUriString","Math","random","modelUri","parse","model","createModel","setModel","addDiagnostics","toString","height","editorDidMount","_","ed","editorOptions","minimap","enabled","automaticLayout","fixedOverflowWidgets","language","onChange","ev","emptyJSONRPC","useTabs","defaultTabs","tabIndex","setTabIndex","content","url","undefined","tabs","setTabs","setTabName","tab","newTabs","innerTab","setTabContent","ti","i","setTabEditing","editing","handleClose","event","index","t","handleLabelChange","target","setTabUrl","setTabResults","results","setTabOpenRPCDocument","openrpcDocumentToJSONRPCSchemaResult","methodName","methodSchema","methodObject","find","result","TransportDropdown","selectedTransport","transports","style","onAddTransport","anchorEl","setAnchorEl","dialogOpen","setDialogOpen","selectedCustomTransport","setSelectedCustomTransport","customTransportName","setCustomTransportName","customTransportUri","setCustomTransportUri","dialogMenuAnchorEl","setDialogMenuAnchorEl","Dialog","onClose","aria-labelledby","open","Container","maxWidth","Grid","container","justify","alignItems","padding","paddingTop","paddingBottom","marginTop","Typography","variant","gutterBottom","direction","spacing","item","InputBase","placeholder","display","borderRadius","marginRight","Button","onClick","currentTarget","Menu","keepMounted","Boolean","transport","MenuItem","handleCustomTransportDialogMenuItemClick","marginBottom","uri","disabled","marginLeft","endIcon","handleMenuItemClick","postmessageID","PostMessageTransport","window","iframe","document","createElement","setAttribute","urlRegex","Promise","resolve","reject","test","Error","addEventListener","el","getElementById","parentNode","insertBefore","origin","transportRequestManager","resolveResponse","JSON","stringify","data","prom","this","addRequest","contentWindow","postMessage","request","remove","Transport","getTransportFromType","a","async","localTransportType","localTransport","WebSocketTransport","HTTPTransport","intermediateTransport","InterTransport","connect","sendData","internalID","useTransport","defaultTransportType","setTransport","transportConnected","setTransportConnected","transportType","setTransportType","error","setError","doSetTransport","catch","e","defaultTransports","errorToJSON","emptyErrorResponse","code","message","Inspector","responseEditor","setResponseEditor","setOpenRpcDocument","json","setJson","setResults","transportList","setTransportList","setUrl","useDebounce","debouncedUrl","setSelectedTransport","connected","historyOpen","setHistoryOpen","requestHistory","setRequestHistory","historySelectedIndex","setHistorySelectedIndex","clear","d","parseOpenRPCDocument","doc","refreshOpenRpcDocument","Tooltip","IconButton","List","overflowY","width","requestHistoryItem","historyIndex","ListItem","button","selected","ListItemText","primary","secondary","Tabs","indicatorColor","newValue","Tab","disableRipple","border","outline","userSelect","onDoubleClick","onBlur","autoFocus","textTransform","right","top","size","minWidth","scale","AppBar","zIndex","Toolbar","alt","src","addedTransport","changedTransport","r","newHistory","convertedError","fontSize","startAdornment","green","textAlign","cursor","fullWidth","hideToggleTheme","onToggleDarkMode","darkMode","split","minSize","maxSize","defaultSize","flexGrow","val","jsonResult","console","wordWrap","lineNumbers","wrappingIndent","readOnly","showFoldingControls","__","useQueryParams","depth","qs","location","search","ignoreQueryPrefix","decoder","str","parseInt","decodeURIComponent","App","useDarkMode","query","theme","setTheme","CssBaseline","toggle","ReactDOM","render"],"mappings":"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","file":"static/js/main.0739890f.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\nimport grey from \"@material-ui/core/colors/grey\";\n\nexport const lightTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n    MuiCard: {\n      elevation: 0,\n    },\n  },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        background: \"#fff !important\",\n      },\n    },\n  },\n  palette: {\n    background: {\n      default: \"#fff\",\n    },\n  },\n});\n\nexport const darkTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n    MuiCard: {\n      elevation: 0,\n    },\n  },\n  palette: {\n    type: \"dark\",\n    background: {\n      default: grey[900],\n      paper: grey[800],\n    },\n  },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTable: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTypography: {\n      root: {\n        color: grey[400],\n      },\n    },\n  },\n});\n\nexport default {\n  darkTheme,\n  lightTheme,\n};\n","import { MethodObject, ContentDescriptorObject, OpenrpcDocument, ExampleObject } from \"@open-rpc/meta-schema\";\n\nconst schema: any = {\n  type: \"object\",\n  properties: {\n    jsonrpc: {\n      type: \"string\",\n      enum: [\"2.0\"],\n      description: \"JSON-RPC version string\",\n    },\n    id: {\n      description: \"unique identifier for the JSON-RPC request\",\n      oneOf: [\n        {\n          type: \"string\",\n        },\n        {\n          type: \"number\",\n        },\n      ],\n    },\n    method: {\n      type: \"string\",\n    },\n  },\n};\n\nconst openrpcDocumentToJSONRPCSchema = (openrpcDocument: OpenrpcDocument) => {\n  return {\n    type: \"object\",\n    properties: {\n      id: {\n        ...schema.properties.id,\n      },\n      jsonrpc: {\n        ...schema.properties.jsonrpc,\n      },\n      method: {\n        type: \"string\",\n        oneOf: openrpcDocument && openrpcDocument.methods && openrpcDocument.methods.map((method) => {\n          return {\n            const: method.name,\n            description: method.description || method.summary,\n            markdownDescription: method.description || method.summary,\n          };\n        }),\n      },\n    },\n    allOf: openrpcDocument && openrpcDocument.methods && openrpcDocument.methods.map((method: MethodObject) => {\n      return {\n        if: {\n          properties: {\n            method: {\n              const: method.name,\n            },\n          },\n        },\n        then: {\n          properties: {\n            params: {\n              oneOf: [\n                {\n                  type: \"array\",\n                  minItems: method.params && method.params.filter((param: any) => param.required).length,\n                  maxItems: method.params && method.params.length,\n                  defaultSnippets: method.examples ? method.examples.map((example: any) => {\n                    return {\n                      label: example.name,\n                      description: example.description || example.summary,\n                      body: example.params && example.params.map((ex: ExampleObject) => ex.value),\n                    };\n                  }) : [],\n                  items: method.params && method.params.map((param: any) => {\n                    return {\n                      ...param.schema,\n                      markdownDescription: param.description || param.summary,\n                      description: param.description || param.summary,\n                      additionalProperties: false,\n                    };\n                  }),\n                },\n                {\n                  type: \"object\",\n                  properties: method.params && (method.params as ContentDescriptorObject[])\n                    .reduce((memo: any, param: ContentDescriptorObject) => {\n                      memo[param.name] = {\n                        ...param.schema,\n                        markdownDescription: param.description || param.summary,\n                        description: param.description || param.summary,\n                        additionalProperties: false,\n                      };\n                      return memo;\n                    }, {}),\n                },\n              ],\n            },\n          },\n        },\n      };\n    }),\n  };\n};\n\nexport default openrpcDocumentToJSONRPCSchema;\n","import { useState, useEffect, Dispatch } from \"react\";\nimport * as monaco from \"monaco-editor\";\nconst { initVimMode } = require(\"monaco-vim\"); //tslint:disable-line\n\n// Vim Mode:\n// Press Chord Ctrl-K, Ctrl-V => the action will run if it is enabled\nconst useMonacoVimMode = (editor: monaco.editor.IStandaloneCodeEditor | undefined) => {\n  const [vimMode, setVimMode]: [any, Dispatch<any>] = useState();\n\n  useEffect(() => {\n    if (!editor) { return; }\n\n    editor.addAction({\n      id: \"vim-mode\",\n      label: \"Vim Mode\",\n      keybindings: [\n        monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_V), //tslint:disable-line\n      ],\n      contextMenuGroupId: \"navigation\",\n      contextMenuOrder: 1.5,\n      run: () => {\n        if (vimMode) {\n          vimMode.dispose();\n        }\n        setVimMode(initVimMode(editor));\n      },\n    });\n\n    return () => {\n      if (vimMode) {\n        vimMode.dispose();\n      }\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editor]);\n\n  return [editor, vimMode];\n};\n\nexport default useMonacoVimMode;\n","import React, { useEffect, useState } from \"react\";\nimport MonacoEditor from \"@etclabscore/react-monaco-editor\";\nimport * as monaco from \"monaco-editor\";\nimport { MethodObject, OpenrpcDocument } from \"@open-rpc/meta-schema\";\nimport useWindowSize from \"@rehooks/window-size\";\nimport { addDiagnostics } from \"@etclabscore/monaco-add-json-schema-diagnostics\";\nimport openrpcDocumentToJSONRPCSchema from \"../helpers/openrpcDocumentToJSONRPCSchema\";\nimport useMonacoVimMode from \"../hooks/useMonacoVimMode\";\n\ninterface IProps {\n  onChange?: (newValue: any) => void;\n  openrpcMethodObject?: MethodObject;\n  openrpcDocument?: OpenrpcDocument;\n  value: any;\n}\n\nconst JSONRPCRequestEditor: React.FC<IProps> = (props) => {\n  const [editor, setEditor] = useState();\n  useMonacoVimMode(editor);\n  const windowSize = useWindowSize();\n  useEffect(() => {\n    if (editor) {\n      editor.layout();\n    }\n  }, [windowSize, editor]);\n\n  useEffect(() => {\n    if (!editor) {\n      return;\n    }\n    const modelName = (props.openrpcDocument && props.openrpcDocument.info) ? props.openrpcDocument.info.title : \"inspector\";\n    const modelUriString = `inmemory://${modelName}-${Math.random()}.json`;\n    const modelUri = monaco.Uri.parse(modelUriString);\n    const model = monaco.editor.createModel(props.value || \"\", \"json\", modelUri);\n    editor.setModel(model);\n    let schema: any = {\n      type: \"object\",\n      properties: {\n        jsonrpc: {\n          type: \"string\",\n          const: \"2.0\",\n        },\n        id: {\n          oneOf: [\n            {\n              type: \"string\",\n            },\n            {\n              type: \"number\",\n            },\n          ],\n        },\n        method: {\n          type: \"string\",\n        },\n      },\n    };\n\n    if (props.openrpcDocument) {\n      schema = openrpcDocumentToJSONRPCSchema(props.openrpcDocument);\n    } else {\n      schema = {\n        additionalProperties: false,\n        properties: {\n          ...schema.properties,\n          params: {\n            oneOf: [\n              { type: \"array\" },\n              { type: \"object\" },\n            ],\n          },\n        },\n      };\n    }\n    addDiagnostics(modelUri.toString(), schema, monaco);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.openrpcDocument, editor]);\n\n  function handleEditorDidMount(_: any, ed: any) {\n    setEditor(ed);\n  }\n\n  const handleChange = (ev: any, value: any) => {\n    if (props.onChange) {\n      props.onChange(value);\n    }\n  };\n\n  return (\n    <MonacoEditor\n      height=\"93vh\"\n      value={props.value}\n      editorDidMount={handleEditorDidMount}\n      editorOptions={{\n        minimap: {\n          enabled: false,\n        },\n        automaticLayout: true,\n        fixedOverflowWidgets: true,\n      }}\n      language=\"json\"\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default JSONRPCRequestEditor;\n","import { useState, Dispatch, useEffect } from \"react\";\nimport { OpenrpcDocument } from \"@open-rpc/meta-schema\";\n\ninterface ITab {\n  name: string;\n  content?: any;\n  results?: string;\n  editing?: boolean;\n  url?: string;\n  openrpcDocument?: OpenrpcDocument;\n}\n\nconst emptyJSONRPC = {\n  jsonrpc: \"2.0\",\n  method: \"\",\n  params: [],\n  id: 0,\n};\n\nconst useTabs = (defaultTabs?: ITab[]) => {\n  const [tabIndex, setTabIndex] = useState(0);\n  const [tabs, setTabs]: [ITab[], Dispatch<any>] = useState(\n    defaultTabs || [{ name: \"New Tab\", content: emptyJSONRPC, url: undefined }],\n  );\n\n  const handleClose = (event: React.MouseEvent<{}>, index: number) => {\n    if (tabs.length === 1) {\n      return;\n    }\n    const t = tabs.filter((tab, i) => i !== index);\n    setTabs(t);\n  };\n\n  useEffect(() => {\n    if (tabs.length === tabIndex) {\n      setTabIndex(tabIndex - 1);\n    }\n  }, [tabs, tabIndex]);\n\n  const setTabName = (tab: ITab, name: string) => {\n    const newTabs = tabs.map((innerTab) => {\n      if (innerTab === tab) {\n        return {\n          ...innerTab,\n          name,\n        };\n      }\n      return innerTab;\n    });\n    setTabs(newTabs);\n  };\n\n  const setTabEditing = (tab: ITab, editing: boolean) => {\n    const newTabs = tabs.map((innerTab) => {\n      if (innerTab === tab) {\n        return {\n          ...innerTab,\n          editing,\n        };\n      }\n      return innerTab;\n    });\n    setTabs(newTabs);\n  };\n\n  const setTabOpenRPCDocument = (ti: number, openrpcDocument: OpenrpcDocument | undefined) => {\n    const newTabs = tabs.map((innerTab, i) => {\n      if (i === ti) {\n        if (!openrpcDocument) {\n          return {\n            name: innerTab.name,\n            content: innerTab.content,\n            results: innerTab.results,\n            editing: innerTab.editing,\n            url: innerTab.url,\n          };\n        }\n        return {\n          ...innerTab,\n          openrpcDocument,\n        };\n      }\n      return innerTab;\n    });\n    setTabs(newTabs);\n  };\n\n  const setTabUrl = (ti: number, url: string) => {\n    const newTabs = tabs.map((innerTab, i) => {\n      if (i === ti) {\n        return {\n          ...innerTab,\n          url,\n        };\n      }\n      return innerTab;\n    });\n    setTabs(newTabs);\n  };\n\n  const setTabResults = (ti: number, results: any) => {\n    const newTabs = tabs.map((innerTab, i) => {\n      if (i === ti) {\n        return {\n          ...innerTab,\n          results,\n        };\n      }\n      return innerTab;\n    });\n    setTabs(newTabs);\n  };\n\n  const setTabContent = (ti: number, content: any) => {\n    const newTabs = tabs.map((innerTab, i) => {\n      if (i === ti) {\n        return {\n          ...innerTab,\n          content,\n        };\n      }\n      return innerTab;\n    });\n    setTabs(newTabs);\n  };\n\n  const handleLabelChange = (ev: any, tab: ITab) => {\n    setTabName(tab, ev.target.value);\n  };\n  return {\n    setTabContent,\n    setTabEditing,\n    setTabIndex,\n    setTabName,\n    tabs,\n    setTabs,\n    handleClose,\n    tabIndex,\n    handleLabelChange,\n    setTabUrl,\n    setTabResults,\n    setTabOpenRPCDocument,\n  };\n};\n\nexport default useTabs;\n","import { MethodObject, ContentDescriptorObject, OpenrpcDocument } from \"@open-rpc/meta-schema\";\n\nconst schema: any = {\n  type: \"object\",\n  properties: {\n    jsonrpc: {\n      type: \"string\",\n      description: \"JSON-RPC Version String\",\n      const: \"2.0\",\n    },\n    id: {\n      oneOf: [\n        {\n          type: \"string\",\n        },\n        {\n          type: \"number\",\n        },\n      ],\n    },\n  },\n};\n\nconst openrpcDocumentToJSONRPCSchemaResult = (openrpcDocument: OpenrpcDocument, methodName: string) => {\n  const methodObject: MethodObject | undefined = openrpcDocument.methods.find((method) => method.name === methodName);\n  let methodSchema: any;\n  if (methodObject !== undefined && methodObject.result !== undefined) {\n    methodSchema = (methodObject.result as ContentDescriptorObject).schema;\n  }\n  return {\n    type: \"object\",\n    properties: {\n      id: {\n        ...schema.properties.id,\n      },\n      jsonrpc: {\n        ...schema.properties.jsonrpc,\n      },\n      result: {\n        ...methodSchema,\n        markdownDescription: methodObject?.description || methodObject?.summary,\n        description: methodObject?.description || methodObject?.summary,\n      },\n    },\n  };\n};\n\nexport default openrpcDocumentToJSONRPCSchemaResult;\n","import React, { useState, ChangeEvent } from \"react\";\nimport { Button, Menu, MenuItem, Typography, Dialog, Container, Grid, InputBase } from \"@material-ui/core\";\nimport { CSSProperties } from \"@material-ui/core/styles/withStyles\";\nimport PlusIcon from \"@material-ui/icons/Add\";\nimport DropdownArrowIcon from \"@material-ui/icons/ArrowDropDown\";\nimport { ITransport } from \"../hooks/useTransport\";\n\ninterface IProps {\n  transports: ITransport[];\n  selectedTransport: ITransport;\n  onChange: (changedTransport: ITransport) => void;\n  onAddTransport: (addedTransport: ITransport) => void;\n  style?: CSSProperties;\n}\n\nconst TransportDropdown: React.FC<IProps> = ({ selectedTransport, transports, onChange, style, onAddTransport }) => {\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleMenuItemClick = (transport: ITransport) => {\n    setAnchorEl(null);\n    // this forces language change for react + i18n react\n    onChange(transport);\n  };\n\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [dialogOpen, setDialogOpen] = useState<boolean>(false);\n\n  const [selectedCustomTransport, setSelectedCustomTransport] = useState<ITransport | undefined>();\n  const [customTransportName, setCustomTransportName] = useState<string | undefined>();\n  const [customTransportUri, setCustomTransportUri] = useState<string | undefined>();\n\n  const [dialogMenuAnchorEl, setDialogMenuAnchorEl] = useState<null | HTMLElement>(null);\n\n  const handleDialogAnchorClose = () => {\n    setDialogMenuAnchorEl(null);\n  };\n  const handleDialogCustomTransportClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setDialogMenuAnchorEl(event.currentTarget);\n  };\n\n  const handleCustomTransportDialogMenuItemClick = (transport: ITransport) => {\n    setDialogMenuAnchorEl(null);\n    setSelectedCustomTransport(transport);\n  };\n\n  const handleSubmitCustomTransport = () => {\n    setDialogMenuAnchorEl(null);\n    if (selectedCustomTransport && customTransportName && customTransportUri) {\n      const t: ITransport = {\n        type: \"plugin\",\n        transport: selectedCustomTransport,\n        name: customTransportName,\n        uri: customTransportUri,\n      };\n      onAddTransport(t);\n      setDialogOpen(false);\n    }\n  };\n  return (\n    <div style={style}>\n      <Dialog onClose={() => setDialogOpen(false)} aria-labelledby=\"simple-dialog-title\" open={dialogOpen}>\n        <Container maxWidth=\"sm\">\n          <Grid\n            container\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style={{ padding: \"30px\", paddingTop: \"10px\", paddingBottom: \"10px\", marginTop: \"10px\" }}>\n            <Typography variant=\"h6\">Custom Transport Plugin</Typography>\n            <Typography variant=\"caption\" gutterBottom>\n              Transport plugins are created by implementing the \"connect\",\n              \"sendData\", and \"close\" methods over JSON-RPC.\n             </Typography>\n            <Grid container direction=\"column\" spacing={1}>\n              <Grid item>\n                <InputBase placeholder=\"Plugin Name\"\n                  onChange={\n                    (event: ChangeEvent<HTMLInputElement>) => {\n                      setCustomTransportName(event.target.value);\n                    }\n                  }\n                  style={{\n                    display: \"block\",\n                    background: \"rgba(0,0,0,0.1)\",\n                    borderRadius: \"4px\",\n                    padding: \"0px 10px\",\n                    marginRight: \"5px\",\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <InputBase placeholder=\"Plugin URI\"\n                  onChange={\n                    (event: ChangeEvent<HTMLInputElement>) => {\n                      setCustomTransportUri(event.target.value);\n                    }\n                  }\n                  style={{\n                    display: \"block\",\n                    background: \"rgba(0,0,0,0.1)\",\n                    borderRadius: \"4px\",\n                    padding: \"0px 10px\",\n                    marginRight: \"5px\",\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <Button\n                  variant=\"outlined\"\n                  onClick={handleDialogCustomTransportClick}>\n                  {selectedCustomTransport ? selectedCustomTransport.name : \"Select A Transport\"}\n                </Button>\n              </Grid>\n            </Grid>\n            <Menu\n              id=\"transport-menu\"\n              anchorEl={dialogMenuAnchorEl}\n              keepMounted\n              open={Boolean(dialogMenuAnchorEl)}\n              onClose={handleDialogAnchorClose}\n            >\n              {transports.filter((value) => value.type !== \"plugin\").map((transport, i) => (\n                <MenuItem\n                  onClick={() => handleCustomTransportDialogMenuItemClick(transport)}\n                >{transport.name}</MenuItem>\n              ))}\n            </Menu>\n            <Button\n              style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\n              onClick={handleSubmitCustomTransport}\n              disabled={!customTransportName || !customTransportUri || !selectedCustomTransport}\n              variant=\"contained\">\n              Add Transport\n            </Button>\n          </Grid>\n        </Container>\n      </Dialog>\n      <Button\n        style={{\n          marginRight: \"10px\",\n          marginLeft: \"5px\",\n        }}\n        variant=\"outlined\"\n        onClick={handleClick} endIcon={<DropdownArrowIcon />}\n      >{selectedTransport && selectedTransport.name}</Button>\n      <Menu\n        id=\"transport-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {transports.map((transport, i) => (\n          <MenuItem onClick={() => handleMenuItemClick(transport)}>{transport.name}</MenuItem>\n        ))}\n        <MenuItem onClick={() => setDialogOpen(true)}>\n          <PlusIcon style={{ marginRight: \"5px\" }} /><Typography variant=\"caption\">Add Transport</Typography>\n        </MenuItem>\n      </Menu>\n    </div>\n  );\n};\n\nexport default TransportDropdown;\n","\nimport { Transport } from \"@open-rpc/client-js/build/transports/Transport\";\nimport { JSONRPCRequestData, IJSONRPCData } from \"@open-rpc/client-js/build/Request\";\n\nconst postmessageID = \"post-message-transport\";\n\nclass PostMessageTransport extends Transport {\n  public uri: string;\n  public window: any;\n  public iframe: HTMLIFrameElement;\n\n  constructor(uri: string) {\n    super();\n    this.uri = uri;\n    this.iframe = document.createElement(\"iframe\");\n    this.iframe.setAttribute(\"width\", \"0px\");\n    this.iframe.setAttribute(\"height\", \"0px\");\n    this.iframe.setAttribute(\"style\", \"visiblity:hidden;border:none;outline:none;\");\n    this.iframe.setAttribute(\"src\", this.uri);\n    this.iframe.setAttribute(\"id\", postmessageID);\n  }\n  public connect(): Promise<any> {\n    const urlRegex = /^(http|https):\\/\\/.*$/;\n    return new Promise((resolve, reject) => {\n      if (!urlRegex.test(this.uri)) {\n        reject(new Error(\"Bad URI\"));\n      }\n      this.iframe.addEventListener(\"load\", () => {\n        resolve();\n      });\n      const el = document.getElementById(\"root\");\n      el?.parentNode?.insertBefore(this.iframe, el);\n      window.addEventListener(\"message\", (ev: MessageEvent) => {\n        if (ev.origin === window.origin) {\n          return;\n        }\n        this.transportRequestManager.resolveResponse(JSON.stringify(ev.data));\n      });\n    });\n  }\n\n  public async sendData(data: JSONRPCRequestData, timeout: number | undefined = 5000): Promise<any> {\n    const prom = this.transportRequestManager.addRequest(data, undefined);\n    this.iframe?.contentWindow?.postMessage((data as IJSONRPCData).request, this.uri);\n    return prom;\n  }\n\n  public close(): void {\n    const el = document.getElementById(postmessageID);\n    el?.remove();\n  }\n}\n\nexport default PostMessageTransport;\n","\nimport { JSONRPCError } from \"@open-rpc/client-js/build/Error\";\nimport { Dispatch, useEffect, useState } from \"react\";\nimport PostMessageTransport from \"../transports/PostMessageTransport\";\nimport { HTTPTransport, WebSocketTransport } from \"@open-rpc/client-js\";\nimport { Transport } from \"@open-rpc/client-js/build/transports/Transport\";\nimport { IJSONRPCData } from \"@open-rpc/client-js/build/Request\";\n\ntype TTransport = \"http\" | \"websocket\" | \"postmessage\";\n\nexport interface IWebTransport {\n  type: TTransport;\n  name?: string;\n}\n\nexport interface IPluginTransport {\n  type: \"plugin\";\n  uri: string;\n  name: string;\n  transport: ITransport;\n}\nconst getTransportFromType = async (\n  uri: string,\n  transports: ITransport[],\n  transport: ITransport,\n): Promise<Transport> => {\n  let localTransport: any;\n  const localTransportType = transports.find((value) => {\n    return value.type === transport.type;\n  });\n  if (localTransportType?.type === \"websocket\") {\n    localTransport = new WebSocketTransport(uri);\n  } else if (localTransportType?.type === \"http\") {\n    localTransport = new HTTPTransport(uri);\n  } else if (localTransportType?.type === \"postmessage\") {\n    localTransport = new PostMessageTransport(uri);\n  } else if (localTransportType?.type === \"plugin\") {\n    const intermediateTransport = await getTransportFromType(\n      localTransportType.uri,\n      transports,\n      localTransportType.transport,\n    );\n    class InterTransport extends Transport {\n      public async connect() {\n        await intermediateTransport.connect();\n        const results = await intermediateTransport.sendData({\n          internalID: 0,\n          request: {\n            jsonrpc: \"2.0\",\n            method: \"connect\",\n            params: [uri],\n            id: 0,\n          },\n        });\n        return results;\n      }\n      public sendData(data: IJSONRPCData): Promise<any> {\n        return intermediateTransport.sendData({\n          internalID: 0,\n          request: {\n            jsonrpc: \"2.0\",\n            method: \"sendData\",\n            params: [data.request],\n            id: 0,\n          },\n        });\n      }\n      public close() {\n        return intermediateTransport.sendData({\n          internalID: 0,\n          request: {\n            jsonrpc: \"2.0\",\n            method: \"close\",\n            params: [],\n            id: 0,\n          },\n        });\n      }\n    }\n    localTransport = new InterTransport();\n  }\n\n  return localTransport;\n};\n\nexport type ITransport = IWebTransport | IPluginTransport;\n\ntype TUseTransport = (transports: ITransport[], url: string, defaultTransportType: ITransport) =>\n  [Transport | undefined, (t: ITransport) => void, JSONRPCError | undefined, boolean];\n\nconst useTransport: TUseTransport = (transports, url, defaultTransportType) => {\n  const [transport, setTransport] = useState<Transport>();\n  const [transportConnected, setTransportConnected] = useState<boolean>(false);\n  const [transportType, setTransportType]:\n    [ITransport | undefined, Dispatch<ITransport>] = useState(defaultTransportType);\n  const [error, setError]: [JSONRPCError | undefined, Dispatch<JSONRPCError | undefined>] = useState();\n  useEffect(() => {\n    if (url === \"\" || url === undefined) {\n      setTransport(undefined);\n      return;\n    }\n    if (!transportType) {\n      return;\n    }\n    const doSetTransport = async () => {\n      const localTransport = await getTransportFromType(url, transports, transportType);\n      return localTransport.connect().then(() => {\n        setTransportConnected(true);\n        setTransport(localTransport);\n      });\n    };\n\n    doSetTransport()\n      .catch((e: JSONRPCError) => {\n        setTransportConnected(false);\n        setTransport(undefined);\n        setError(e);\n      });\n  }, [transportType, url, transports]);\n  const setSelectedTransportType = async (t: ITransport) => {\n    setTransportConnected(false);\n    setTransportType(t);\n  };\n  return [transport, setSelectedTransportType, error, transportConnected];\n};\n\nexport default useTransport;\n","import React, { useState, useEffect, ChangeEvent, Dispatch } from \"react\";\nimport SplitPane from \"react-split-pane\";\nimport JSONRPCRequestEditor from \"./JSONRPCRequestEditor\";\nimport * as monaco from \"monaco-editor\";\nimport PlayCircle from \"@material-ui/icons/PlayCircleFilled\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport FlashOn from \"@material-ui/icons/FlashOn\";\nimport FlashOff from \"@material-ui/icons/FlashOff\";\nimport History from \"@material-ui/icons/History\";\nimport PlusIcon from \"@material-ui/icons/Add\";\nimport DocumentIcon from \"@material-ui/icons/Description\";\nimport {\n  IconButton,\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  InputBase,\n  Tab,\n  Tabs,\n  Tooltip,\n  Grid,\n  Dialog,\n  ListItem,\n  List,\n  ListItemText,\n  Container,\n} from \"@material-ui/core\";\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport { JSONRPCError } from \"@open-rpc/client-js/build/Error\";\nimport { OpenrpcDocument } from \"@open-rpc/meta-schema\";\nimport MonacoEditor from \"@etclabscore/react-monaco-editor\";\nimport useTabs from \"../hooks/useTabs\";\nimport { useDebounce } from \"use-debounce\";\nimport { green } from \"@material-ui/core/colors\";\nimport { parseOpenRPCDocument } from \"@open-rpc/schema-utils-js\";\nimport useMonacoVimMode from \"../hooks/useMonacoVimMode\";\nimport { addDiagnostics } from \"@etclabscore/monaco-add-json-schema-diagnostics\";\nimport openrpcDocumentToJSONRPCSchemaResult from \"../helpers/openrpcDocumentToJSONRPCSchemaResult\";\nimport TransportDropdown from \"../components/TransportDropdown\";\nimport useTransport, { ITransport } from \"../hooks/useTransport\";\n\nconst defaultTransports: ITransport[] = [\n  {\n    type: \"http\",\n    name: \"HTTP\",\n  },\n  {\n    type: \"websocket\",\n    name: \"WebSocket\",\n  },\n  {\n    type: \"postmessage\",\n    name: \"PostMessage\",\n  },\n];\n\nconst errorToJSON = (error: JSONRPCError | any, id: string | number): any => {\n  const isError = error instanceof Error;\n  if (!isError) {\n    return;\n  }\n  if (!error) {\n    return;\n  }\n  const emptyErrorResponse = {\n    jsonrpc: \"2.0\",\n    id,\n  };\n  // this is an internal wrapped client-js error\n  if (error.data instanceof Error) {\n    return {\n      ...emptyErrorResponse,\n      error: {\n        code: error.data.code,\n        message: error.data.message,\n        data: error.data.data,\n      },\n    };\n  }\n  return {\n    ...emptyErrorResponse,\n    error: {\n      code: error.code,\n      message: error.message,\n      data: error.data,\n    },\n  };\n};\n\ninterface IProps {\n  url?: string;\n  request?: any;\n  darkMode?: boolean;\n  hideToggleTheme?: boolean;\n  openrpcDocument?: OpenrpcDocument;\n  onToggleDarkMode?: () => void;\n}\n\nconst emptyJSONRPC = {\n  jsonrpc: \"2.0\",\n  method: \"\",\n  params: [],\n  id: 0,\n};\n\nconst Inspector: React.FC<IProps> = (props) => {\n  const {\n    setTabContent,\n    setTabEditing,\n    setTabIndex,\n    tabs,\n    setTabs,\n    handleClose,\n    tabIndex,\n    setTabOpenRPCDocument,\n    setTabUrl,\n    handleLabelChange,\n    setTabResults,\n  } = useTabs(\n    [\n      {\n        name: props.request ? props.request.method : \"New Tab\",\n        content: props.request || { ...emptyJSONRPC },\n        url: props.url || \"\",\n        openrpcDocument: props.openrpcDocument,\n      },\n    ],\n  );\n  const [responseEditor, setResponseEditor] = useState();\n  useMonacoVimMode(responseEditor);\n  const [openrpcDocument, setOpenRpcDocument] = useState(props.openrpcDocument);\n  const [json, setJson] = useState(props.request || {\n    jsonrpc: \"2.0\",\n    method: \"\",\n    params: [],\n    id: 0,\n  });\n  const [results, setResults]: [any, Dispatch<any>] = useState();\n  const [transportList, setTransportList] = useState(defaultTransports);\n  const [url, setUrl] = useState(props.url || \"\");\n  const [debouncedUrl] = useDebounce(url, 1000);\n  const [selectedTransport, setSelectedTransport] = useState(defaultTransports[0]);\n  const [transport, setTransport, , connected] = useTransport(transportList, debouncedUrl, defaultTransports[0]);\n  const [historyOpen, setHistoryOpen] = useState(false);\n  const [requestHistory, setRequestHistory]: [any[], Dispatch<any>] = useState([]);\n  const [historySelectedIndex, setHistorySelectedIndex] = useState(0);\n  useEffect(() => {\n    setTabs([\n      ...tabs,\n      {\n        name: props.request ? props.request.method || \"New Tab\" : \"New Tab\",\n        content: props.request,\n        url: props.url,\n        openrpcDocument,\n      },\n    ]);\n    setTabIndex(tabs.length);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.request]);\n\n  useEffect(() => {\n    if (selectedTransport !== undefined) {\n      setTransport(selectedTransport!);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedTransport]);\n\n  useEffect(() => {\n    if (!openrpcDocument) {\n      return;\n    }\n    if (!responseEditor) {\n      return;\n    }\n    if (!results) {\n      return;\n    }\n    const schema = openrpcDocumentToJSONRPCSchemaResult(openrpcDocument, json.method);\n    const modelName = \"inspector-results\";\n    const modelUriString = `inmemory://${modelName}-${Math.random()}.json`;\n    const modelUri = monaco.Uri.parse(modelUriString);\n    const model = monaco.editor.createModel(\n      results ? JSON.stringify(results, null, 4) : \"\"\n      , \"json\", modelUri);\n    responseEditor.setModel(model);\n    addDiagnostics(modelUri.toString(), schema, monaco);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [results, responseEditor, openrpcDocument]);\n\n  useEffect(() => {\n    if (json) {\n      setTabContent(tabIndex, json);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [json]);\n\n  useEffect(() => {\n    if (props.url) {\n      setUrl(props.url);\n      setTabUrl(tabIndex, props.url);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.url]);\n\n  const handlePlayButton = async () => {\n    clear();\n    if (transport) {\n      try {\n        const result = await transport.sendData({\n          internalID: json.id,\n          request: json,\n        });\n        const r = { jsonrpc: \"2.0\", result, id: json.id };\n        setResults(r);\n        setTabResults(tabIndex, r);\n        const newHistory: any = [...requestHistory, { ...tabs[tabIndex] }];\n        setRequestHistory(newHistory);\n      } catch (e) {\n        const convertedError = errorToJSON(e, json.id);\n        const newHistory: any = [...requestHistory, { ...tabs[tabIndex] }];\n        setRequestHistory(newHistory);\n        setResults(convertedError);\n        setTabResults(tabIndex, convertedError);\n      }\n    }\n  };\n  function handleResponseEditorDidMount(__: any, editor: any) {\n    setResponseEditor(editor);\n  }\n\n  const clear = () => {\n    setResults(undefined);\n    setTabResults(tabIndex, undefined);\n  };\n\n  const handleClearButton = () => {\n    clear();\n  };\n\n  const handleToggleDarkMode = () => {\n    if (props.onToggleDarkMode) {\n      props.onToggleDarkMode();\n    }\n  };\n  const refreshOpenRpcDocument = async () => {\n    try {\n      const d = await transport?.sendData({\n        internalID: 999999,\n        request: {\n          jsonrpc: \"2.0\",\n          params: [],\n          id: 999999,\n          method: \"rpc.discover\",\n        },\n      });\n      const doc = await parseOpenRPCDocument(d);\n      setOpenRpcDocument(doc);\n      setTabOpenRPCDocument(tabIndex, doc);\n    } catch (e) {\n      if (!props.openrpcDocument) {\n        setOpenRpcDocument(undefined);\n        setTabOpenRPCDocument(tabIndex, undefined);\n      }\n    }\n  };\n  useEffect(() => {\n    if (!props.openrpcDocument) {\n      setOpenRpcDocument(undefined);\n    }\n    refreshOpenRpcDocument();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [transport, tabIndex]);\n\n  useEffect(() => {\n    if (tabs[tabIndex]) {\n      setJson(tabs[tabIndex].content);\n      setUrl(tabs[tabIndex].url || \"\");\n      setResults(tabs[tabIndex].results);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tabIndex]);\n\n  useEffect(() => {\n    setOpenRpcDocument(props.openrpcDocument);\n    setTabOpenRPCDocument(tabIndex, props.openrpcDocument);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.openrpcDocument]);\n\n  const handleTabIndexChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setTabIndex(newValue);\n  };\n\n  const onHistoryPlayClick = () => {\n    if (requestHistory[historySelectedIndex]) {\n      setJson(requestHistory[historySelectedIndex].content);\n      setUrl(requestHistory[historySelectedIndex].url);\n      setOpenRpcDocument(requestHistory[historySelectedIndex].openrpcDocument);\n      setResults(undefined);\n      setHistoryOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <Dialog onClose={() => setHistoryOpen(false)} aria-labelledby=\"simple-dialog-title\" open={historyOpen} >\n        <Container maxWidth=\"sm\">\n          <Grid\n            container\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style={{ padding: \"30px\", paddingTop: \"10px\", paddingBottom: \"10px\" }}>\n            <Typography color=\"textPrimary\">History</Typography>\n            {\n              requestHistory.length === 0\n                ? null\n                : <Tooltip title=\"Use\">\n                  <IconButton onClick={onHistoryPlayClick}>\n                    <PlayCircle />\n                  </IconButton>\n                </Tooltip>\n            }\n          </Grid>\n          {\n            requestHistory.length === 0\n              ? <Typography style={{ padding: \"30px\" }}>No History Yet.</Typography>\n              : <Grid container style={{ paddingBottom: \"30px\" }}>\n                <List style={{ padding: \"10px\", overflowY: \"scroll\", height: \"250px\", width: \"200px\" }}>\n                  {requestHistory.map((requestHistoryItem: any, historyIndex: number) => (\n                    <ListItem button\n                      onClick={() => setHistorySelectedIndex(historyIndex)}\n                      selected={historyIndex === historySelectedIndex}>\n                      <ListItemText\n                        primary={requestHistoryItem.content.method || \"Empty Method\"}\n                        secondary={requestHistoryItem.url || \"Empty Url\"}\n                      />\n                    </ListItem>\n                  ))}\n                </List>\n                <MonacoEditor\n                  width=\"300px\"\n                  height=\"250px\"\n                  value={\n                    requestHistory[historySelectedIndex]\n                      ? JSON.stringify(requestHistory[historySelectedIndex].content, null, 4)\n                      : \"\"\n                  }\n                  language=\"json\"\n                  editorDidMount={() => {\n                    // noop\n                  }}\n                />\n              </Grid>\n          }\n        </Container>\n      </Dialog>\n\n      <div style={{ position: \"relative\" }}>\n        <Tabs\n          style={{ background: \"transparent\" }}\n          value={tabIndex}\n          variant=\"scrollable\"\n          indicatorColor=\"primary\"\n          onChange={handleTabIndexChange}\n        >\n          {tabs.map((tab, index) => (\n            <Tab disableRipple style={{\n              border: \"none\",\n              outline: \"none\",\n              userSelect: \"none\",\n            }} onDoubleClick={() => setTabEditing(tab, true)} label={\n              <div style={{ userSelect: \"none\" }}>\n                {tab.editing\n                  ? <InputBase\n                    value={tab.name}\n                    onChange={(ev) => handleLabelChange(ev, tab)}\n                    onBlur={() => setTabEditing(tab, false)}\n                    autoFocus\n                    style={{ maxWidth: \"80px\", marginRight: \"25px\" }}\n                  />\n                  : <Typography style={{ display: \"inline\", textTransform: \"none\", marginRight: \"25px\" }} variant=\"body1\" >{tab.name}</Typography>\n                }\n                {tabIndex === index\n                  ?\n                  <Tooltip title=\"Close Tab\">\n                    <IconButton onClick={\n                      (ev) => handleClose(ev, index)\n                    } style={{ position: \"absolute\", right: \"10px\", top: \"25%\" }} size=\"small\">\n                      <CloseIcon />\n                    </IconButton>\n                  </Tooltip>\n                  : null\n                }\n              </div>\n            }></Tab>\n          ))}\n          <Tab disableRipple style={{ minWidth: \"50px\" }} label={\n            <Tooltip title=\"Create New Tab\">\n              <IconButton onClick={() => setTabs([\n                ...tabs,\n                {\n                  name: \"New Tab\",\n                  content: { ...emptyJSONRPC, id: 0 },\n                  openrpcDocument,\n                  url,\n                },\n              ],\n              )}>\n                <PlusIcon scale={0.5} />\n              </IconButton>\n            </Tooltip>\n          }>\n          </Tab>\n        </Tabs>\n      </div>\n      <AppBar elevation={0} position=\"static\" style={{ zIndex: 1 }}>\n        <Toolbar>\n          <img\n            height=\"30\"\n            alt=\"openrpc-logo\"\n            style={{ marginRight: \"10px\" }}\n            src=\"https://github.com/open-rpc/design/raw/master/icons/open-rpc-logo-noText/open-rpc-logo-noText%20(PNG)/128x128.png\" //tslint:disable-line\n          />\n          <Typography variant=\"h6\" color=\"textSecondary\">Inspector</Typography>\n          <TransportDropdown\n            transports={transportList}\n            onAddTransport={(addedTransport: ITransport) => {\n              setTransportList([\n                ...transportList,\n                addedTransport,\n              ]);\n            }}\n            selectedTransport={selectedTransport}\n            onChange={(changedTransport) => setSelectedTransport(changedTransport)}\n            style={{\n              marginLeft: \"10px\",\n            }}\n          />\n          <Tooltip title=\"Play\">\n            <IconButton onClick={handlePlayButton}>\n              <PlayCircle fontSize=\"large\" />\n            </IconButton>\n          </Tooltip>\n          <InputBase\n            startAdornment={\n              <>\n                <Tooltip title={connected ? \"Connected\" : \"Not Connected\"}>\n                  {connected\n                    ? <FlashOn style={{ color: green[500] }} />\n                    : <FlashOff color=\"error\" />\n                  }\n                </Tooltip>\n                {\n                  openrpcDocument\n                    ?\n                    <Tooltip title={\n                      <div style={{ textAlign: \"center\" }}>\n                        <Typography>OpenRPC Document Detected</Typography>\n                        <Typography variant=\"caption\">\n                          A JSON-RPC endpoint may respond to the rpc.discover method\n                          or a provide a static document.\n                          This adds features like auto completion to the inspector.\n                    </Typography>\n                      </div>\n                    } onClick={() => window.open(\"https://spec.open-rpc.org/#service-discovery-method\")}>\n                      <DocumentIcon style={{ color: green[500], marginRight: \"5px\", cursor: \"pointer\" }} scale={0.1} />\n                    </Tooltip>\n                    : null\n                }\n              </>\n            }\n            value={url}\n            placeholder=\"Enter a JSON-RPC server URL\"\n            onChange={\n              (event: ChangeEvent<HTMLInputElement>) => {\n                setUrl(event.target.value);\n                setTabUrl(tabIndex, event.target.value);\n              }\n            }\n            fullWidth\n            style={{ background: \"rgba(0,0,0,0.1)\", borderRadius: \"4px\", padding: \"0px 10px\", marginRight: \"5px\" }}\n          />\n          <Tooltip title=\"History\">\n            <IconButton onClick={() => setHistoryOpen(true)}>\n              <History />\n            </IconButton>\n          </Tooltip>\n          {\n            props.hideToggleTheme\n              ? null\n              :\n              <Tooltip title=\"Toggle Theme\">\n                <IconButton onClick={handleToggleDarkMode}>\n                  {props.darkMode ? <Brightness3Icon /> : <WbSunnyIcon />}\n                </IconButton>\n              </Tooltip>\n          }\n        </Toolbar>\n      </AppBar>\n      <SplitPane\n        split=\"vertical\"\n        minSize={100}\n        maxSize={-100}\n        defaultSize={\"50%\"}\n        style={{ flexGrow: 1 }}\n        onChange={() => {\n          if (responseEditor) {\n            responseEditor.layout();\n          }\n        }}>\n        <JSONRPCRequestEditor\n          onChange={(val) => {\n            let jsonResult;\n            try {\n              jsonResult = JSON.parse(val);\n            } catch (e) {\n              console.error(e);\n            }\n            if (jsonResult) {\n              setJson(jsonResult);\n              setTabContent(tabIndex, jsonResult);\n            }\n          }}\n          openrpcDocument={openrpcDocument}\n          value={JSON.stringify(json, null, 4)}\n        />\n        <>\n          {results &&\n            <Button\n              style={{ position: \"absolute\", top: \"15px\", right: \"15px\", zIndex: 1 }}\n              onClick={handleClearButton}>\n              Clear\n            </Button>\n          }\n          {results\n            ?\n            <MonacoEditor\n              editorOptions={{\n                minimap: {\n                  enabled: false,\n                },\n                wordWrap: \"on\",\n                lineNumbers: \"off\",\n                wrappingIndent: \"deepIndent\",\n                readOnly: true,\n                showFoldingControls: \"always\",\n                fixedOverflowWidgets: true,\n                automaticLayout: true,\n              }}\n              height=\"93vh\"\n              editorDidMount={handleResponseEditorDidMount}\n              language=\"json\"\n              value={JSON.stringify(results, null, 4) || \"\"}\n            />\n            : <Grid container justify=\"center\" style={{ paddingTop: \"20px\" }} direction=\"column\" alignItems=\"center\">\n              <Typography variant=\"body1\" gutterBottom color=\"textSecondary\" style={{ paddingBottom: \"15px\" }}>\n                Press the Play button to see the results here.\n                </Typography>\n              <Typography variant=\"body1\" color=\"textSecondary\">\n                Use <Button variant=\"contained\" disabled size=\"small\" style={{ marginRight: \"3px\" }}>\n                  CTRL + SPACE\n                </Button>\n                to auto-complete in the editor.\n              </Typography>\n            </Grid>\n          }\n        </>\n      </SplitPane>\n    </>\n  );\n};\n\nexport default Inspector;\n","import { useState } from \"react\";\nimport * as qs from \"qs\";\n\nconst useQueryParams = (depth?: number) => {\n  const parse = () => {\n    return qs.parse(window.location.search, {\n      ignoreQueryPrefix: true,\n      depth: depth || 100,\n      decoder(str) {\n        if (/^([+-]?[0-9]\\d*|0)$/.test(str)) {\n          return parseInt(str, 10);\n        }\n        if (str === \"false\") {\n          return false;\n        }\n        if (str === \"true\") {\n          return true;\n        }\n        return decodeURIComponent(str);\n      },\n    });\n  };\n  const [query] = useState(parse());\n  return [query];\n};\n\nexport default useQueryParams;\n","import React, { useEffect } from \"react\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { MuiThemeProvider } from \"@material-ui/core\";\n\nimport { lightTheme, darkTheme } from \"../themes/openrpcTheme\";\nimport useDarkMode from \"use-dark-mode\";\nimport Inspector from \"./Inspector\";\nimport useQueryParams from \"../hooks/useQueryParams\";\nimport * as monaco from \"monaco-editor\";\n\nconst App: React.FC = () => {\n  const darkMode = useDarkMode();\n  const [query] = useQueryParams();\n  const theme = darkMode.value ? darkTheme : lightTheme;\n  useEffect(() => {\n    const t = darkMode.value ? \"vs-dark\" : \"vs\";\n    monaco.editor.setTheme(t);\n  }, [darkMode.value]);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n\n      <Inspector\n        onToggleDarkMode={darkMode.toggle}\n        darkMode={darkMode.value}\n        url={query.url}\n        openrpcDocument={query.openrpcDocument}\n        request={query.request}\n      />\n    </MuiThemeProvider>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./containers/App\";\nimport \"./App.css\";\nimport \"./splitpane.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}